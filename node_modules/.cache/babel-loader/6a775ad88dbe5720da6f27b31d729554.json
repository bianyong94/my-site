{"remainingRequest":"/Users/apple/Documents/vue例子/vue-ex/my-project/node_modules/babel-loader/lib/index.js!/Users/apple/Documents/vue例子/vue-ex/my-project/node_modules/eslint-loader/index.js??ref--13-0!/Users/apple/Documents/vue例子/vue-ex/my-project/src/excel/Export2Excel.js","dependencies":[{"path":"/Users/apple/Documents/vue例子/vue-ex/my-project/src/excel/Export2Excel.js","mtime":1545814950004},{"path":"/Users/apple/Documents/vue例子/vue-ex/my-project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/Documents/vue例子/vue-ex/my-project/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/apple/Documents/vue例子/vue-ex/my-project/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.typed.uint8-array\";\n\n/* eslint-disable */\nrequire('script-loader!file-saver');\n\nrequire('script-loader!views/excel/Blob');\n\nrequire('script-loader!xlsx/dist/xlsx.core.min');\n\nfunction generateArray(table) {\n  var out = [];\n  var rows = table.querySelectorAll('tr');\n  var ranges = [];\n\n  for (var R = 0; R < rows.length; ++R) {\n    var outRow = [];\n    var row = rows[R];\n    var columns = row.querySelectorAll('td');\n\n    for (var C = 0; C < columns.length; ++C) {\n      var cell = columns[C];\n      var colspan = cell.getAttribute('colspan');\n      var rowspan = cell.getAttribute('rowspan');\n      var cellValue = cell.innerText;\n      if (cellValue !== \"\" && cellValue == +cellValue) cellValue = +cellValue; //Skip ranges\n\n      ranges.forEach(function (range) {\n        if (R >= range.s.r && R <= range.e.r && outRow.length >= range.s.c && outRow.length <= range.e.c) {\n          for (var i = 0; i <= range.e.c - range.s.c; ++i) {\n            outRow.push(null);\n          }\n        }\n      }); //Handle Row Span\n\n      if (rowspan || colspan) {\n        rowspan = rowspan || 1;\n        colspan = colspan || 1;\n        ranges.push({\n          s: {\n            r: R,\n            c: outRow.length\n          },\n          e: {\n            r: R + rowspan - 1,\n            c: outRow.length + colspan - 1\n          }\n        });\n      }\n\n      ; //Handle Value\n\n      outRow.push(cellValue !== \"\" ? cellValue : null); //Handle Colspan\n\n      if (colspan) for (var k = 0; k < colspan - 1; ++k) {\n        outRow.push(null);\n      }\n    }\n\n    out.push(outRow);\n  }\n\n  return [out, ranges];\n}\n\n;\n\nfunction datenum(v, date1904) {\n  if (date1904) v += 1462;\n  var epoch = Date.parse(v);\n  return (epoch - new Date(Date.UTC(1899, 11, 30))) / (24 * 60 * 60 * 1000);\n}\n\nfunction sheet_from_array_of_arrays(data, opts) {\n  var ws = {};\n  var range = {\n    s: {\n      c: 10000000,\n      r: 10000000\n    },\n    e: {\n      c: 0,\n      r: 0\n    }\n  };\n\n  for (var R = 0; R != data.length; ++R) {\n    for (var C = 0; C != data[R].length; ++C) {\n      if (range.s.r > R) range.s.r = R;\n      if (range.s.c > C) range.s.c = C;\n      if (range.e.r < R) range.e.r = R;\n      if (range.e.c < C) range.e.c = C;\n      var cell = {\n        v: data[R][C]\n      };\n      if (cell.v == null) continue;\n      var cell_ref = XLSX.utils.encode_cell({\n        c: C,\n        r: R\n      });\n      if (typeof cell.v === 'number') cell.t = 'n';else if (typeof cell.v === 'boolean') cell.t = 'b';else if (cell.v instanceof Date) {\n        cell.t = 'n';\n        cell.z = XLSX.SSF._table[14];\n        cell.v = datenum(cell.v);\n      } else cell.t = 's';\n      ws[cell_ref] = cell;\n    }\n  }\n\n  if (range.s.c < 10000000) ws['!ref'] = XLSX.utils.encode_range(range);\n  return ws;\n}\n\nfunction Workbook() {\n  if (!(this instanceof Workbook)) return new Workbook();\n  this.SheetNames = [];\n  this.Sheets = {};\n}\n\nfunction s2ab(s) {\n  var buf = new ArrayBuffer(s.length);\n  var view = new Uint8Array(buf);\n\n  for (var i = 0; i != s.length; ++i) {\n    view[i] = s.charCodeAt(i) & 0xFF;\n  }\n\n  return buf;\n}\n\nexport function export_table_to_excel(id) {\n  var theTable = document.getElementById(id);\n  console.log('a');\n  var oo = generateArray(theTable);\n  var ranges = oo[1];\n  /* original data */\n\n  var data = oo[0];\n  var ws_name = \"SheetJS\";\n  console.log(data);\n  var wb = new Workbook(),\n      ws = sheet_from_array_of_arrays(data);\n  /* add ranges to worksheet */\n  // ws['!cols'] = ['apple', 'banan'];\n\n  ws['!merges'] = ranges;\n  /* add worksheet to workbook */\n\n  wb.SheetNames.push(ws_name);\n  wb.Sheets[ws_name] = ws;\n  var wbout = XLSX.write(wb, {\n    bookType: 'xlsx',\n    bookSST: false,\n    type: 'binary'\n  });\n  saveAs(new Blob([s2ab(wbout)], {\n    type: \"application/octet-stream\"\n  }), \"test.xlsx\");\n}\n\nfunction formatJson(jsonData) {\n  console.log(jsonData);\n}\n\nexport function export_json_to_excel(th, jsonData, defaultTitle) {\n  /* original data */\n  var data = jsonData;\n  data.unshift(th);\n  var ws_name = \"SheetJS\";\n  var wb = new Workbook(),\n      ws = sheet_from_array_of_arrays(data);\n  /* add worksheet to workbook */\n\n  wb.SheetNames.push(ws_name);\n  wb.Sheets[ws_name] = ws;\n  var wbout = XLSX.write(wb, {\n    bookType: 'xlsx',\n    bookSST: false,\n    type: 'binary'\n  });\n  var title = defaultTitle || '列表';\n  saveAs(new Blob([s2ab(wbout)], {\n    type: \"application/octet-stream\"\n  }), title + \".xlsx\");\n}",{"version":3,"sources":["/Users/apple/Documents/vue例子/vue-ex/my-project/src/excel/Export2Excel.js"],"names":["require","generateArray","table","out","rows","querySelectorAll","ranges","R","length","outRow","row","columns","C","cell","colspan","getAttribute","rowspan","cellValue","innerText","forEach","range","s","r","e","c","i","push","k","datenum","v","date1904","epoch","Date","parse","UTC","sheet_from_array_of_arrays","data","opts","ws","cell_ref","XLSX","utils","encode_cell","t","z","SSF","_table","encode_range","Workbook","SheetNames","Sheets","s2ab","buf","ArrayBuffer","view","Uint8Array","charCodeAt","export_table_to_excel","id","theTable","document","getElementById","console","log","oo","ws_name","wb","wbout","write","bookType","bookSST","type","saveAs","Blob","formatJson","jsonData","export_json_to_excel","th","defaultTitle","unshift","title"],"mappings":"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","sourcesContent":["/* eslint-disable */\nrequire('script-loader!file-saver');\nrequire('script-loader!views/excel/Blob');\nrequire('script-loader!xlsx/dist/xlsx.core.min');\nfunction generateArray(table) {\n    var out = [];\n    var rows = table.querySelectorAll('tr');\n    var ranges = [];\n    for (var R = 0; R < rows.length; ++R) {\n        var outRow = [];\n        var row = rows[R];\n        var columns = row.querySelectorAll('td');\n        for (var C = 0; C < columns.length; ++C) {\n            var cell = columns[C];\n            var colspan = cell.getAttribute('colspan');\n            var rowspan = cell.getAttribute('rowspan');\n            var cellValue = cell.innerText;\n            if (cellValue !== \"\" && cellValue == +cellValue) cellValue = +cellValue;\n\n            //Skip ranges\n            ranges.forEach(function (range) {\n                if (R >= range.s.r && R <= range.e.r && outRow.length >= range.s.c && outRow.length <= range.e.c) {\n                    for (var i = 0; i <= range.e.c - range.s.c; ++i) outRow.push(null);\n                }\n            });\n\n            //Handle Row Span\n            if (rowspan || colspan) {\n                rowspan = rowspan || 1;\n                colspan = colspan || 1;\n                ranges.push({s: {r: R, c: outRow.length}, e: {r: R + rowspan - 1, c: outRow.length + colspan - 1}});\n            }\n            ;\n\n            //Handle Value\n            outRow.push(cellValue !== \"\" ? cellValue : null);\n\n            //Handle Colspan\n            if (colspan) for (var k = 0; k < colspan - 1; ++k) outRow.push(null);\n        }\n        out.push(outRow);\n    }\n    return [out, ranges];\n};\n\nfunction datenum(v, date1904) {\n    if (date1904) v += 1462;\n    var epoch = Date.parse(v);\n    return (epoch - new Date(Date.UTC(1899, 11, 30))) / (24 * 60 * 60 * 1000);\n}\n\nfunction sheet_from_array_of_arrays(data, opts) {\n    var ws = {};\n    var range = {s: {c: 10000000, r: 10000000}, e: {c: 0, r: 0}};\n    for (var R = 0; R != data.length; ++R) {\n        for (var C = 0; C != data[R].length; ++C) {\n            if (range.s.r > R) range.s.r = R;\n            if (range.s.c > C) range.s.c = C;\n            if (range.e.r < R) range.e.r = R;\n            if (range.e.c < C) range.e.c = C;\n            var cell = {v: data[R][C]};\n            if (cell.v == null) continue;\n            var cell_ref = XLSX.utils.encode_cell({c: C, r: R});\n\n            if (typeof cell.v === 'number') cell.t = 'n';\n            else if (typeof cell.v === 'boolean') cell.t = 'b';\n            else if (cell.v instanceof Date) {\n                cell.t = 'n';\n                cell.z = XLSX.SSF._table[14];\n                cell.v = datenum(cell.v);\n            }\n            else cell.t = 's';\n\n            ws[cell_ref] = cell;\n        }\n    }\n    if (range.s.c < 10000000) ws['!ref'] = XLSX.utils.encode_range(range);\n    return ws;\n}\n\nfunction Workbook() {\n    if (!(this instanceof Workbook)) return new Workbook();\n    this.SheetNames = [];\n    this.Sheets = {};\n}\n\nfunction s2ab(s) {\n    var buf = new ArrayBuffer(s.length);\n    var view = new Uint8Array(buf);\n    for (var i = 0; i != s.length; ++i) view[i] = s.charCodeAt(i) & 0xFF;\n    return buf;\n}\n\nexport function export_table_to_excel(id) {\n    var theTable = document.getElementById(id);\n    console.log('a')\n    var oo = generateArray(theTable);\n    var ranges = oo[1];\n\n    /* original data */\n    var data = oo[0];\n    var ws_name = \"SheetJS\";\n    console.log(data);\n\n    var wb = new Workbook(), ws = sheet_from_array_of_arrays(data);\n\n    /* add ranges to worksheet */\n    // ws['!cols'] = ['apple', 'banan'];\n    ws['!merges'] = ranges;\n\n    /* add worksheet to workbook */\n    wb.SheetNames.push(ws_name);\n    wb.Sheets[ws_name] = ws;\n\n    var wbout = XLSX.write(wb, {bookType: 'xlsx', bookSST: false, type: 'binary'});\n\n    saveAs(new Blob([s2ab(wbout)], {type: \"application/octet-stream\"}), \"test.xlsx\")\n}\n\nfunction formatJson(jsonData) {\n    console.log(jsonData)\n}\nexport function export_json_to_excel(th, jsonData, defaultTitle) {\n\n    /* original data */\n\n    var data = jsonData;\n    data.unshift(th);\n    var ws_name = \"SheetJS\";\n\n    var wb = new Workbook(), ws = sheet_from_array_of_arrays(data);\n\n\n    /* add worksheet to workbook */\n    wb.SheetNames.push(ws_name);\n    wb.Sheets[ws_name] = ws;\n\n    var wbout = XLSX.write(wb, {bookType: 'xlsx', bookSST: false, type: 'binary'});\n    var title = defaultTitle || '列表'\n    saveAs(new Blob([s2ab(wbout)], {type: \"application/octet-stream\"}), title + \".xlsx\")\n}\n"]}]}